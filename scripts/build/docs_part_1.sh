#!/bin/bash
set -e
export BUILD_SCRIPTS_DIR=$(dirname $0)
echo "BUILD_SCRIPTS_DIR: $BUILD_SCRIPTS_DIR"

$BUILD_SCRIPTS_DIR/node_install.sh

export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] && printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh" # This loads nvm

nvm use 16
echo "npm analysis during build"
npm ls -g --depth=0

#comment out this below two line in local during build
if [ "$LOCAL_BUILD" = false ]; then
ln -s "$(which node)" /usr/bin/node
ln -s "$(which npm)" /usr/bin/npm
fi

#Antora Portion of Docs
echo "Begin building of Antora portion of docs"

$BUILD_SCRIPTS_DIR/antora_install.sh

# Use the Antora playbook to download the docs and build the doc pages
timer_start=$(date +%s)
$BUILD_SCRIPTS_DIR/antora_clone_playbook.sh

$BUILD_SCRIPTS_DIR/antora_build_docs.sh
timer_end=$(date +%s)
echo "Total execution time for cloning playbook and building docs via Antora: '$(date -u --date @$(( $timer_end - $timer_start )) +%H:%M:%S)'"

# always pull in translated files and copy to site
rm -rf docs-translation
git clone https://github.com/OpenLiberty/docs-translation.git

# Copy the contents generated by Antora to the website folder
echo "Moving the Antora docs to the jekyll webapp"
timer_start=$(date +%s)
mkdir -p target/jekyll-webapp/docs/
cp -r src/main/content/docs/build/site/. target/jekyll-webapp/
cp -r src/main/content/docs/build/site/_ target/jekyll-webapp/ja/
cp -r src/main/content/docs/build/site/_ target/jekyll-webapp/zh-Hans/

echo "Copying translated versions"
$BUILD_SCRIPTS_DIR/get_translated_versions.sh
echo "Finished copying translated versions"

#copy ref images to translated verions
for f in target/jekyll-webapp/ja/docs/; do
    if [ -d "$f" ]; then
        cp -r src/main/content/docs/build/site/docs/latest/reference/_images $f/reference/
    fi
done

for f in target/jekyll-webapp/zh-Hans/docs/; do
    if [ -d "$f" ]; then
        cp -r src/main/content/docs/build/site/docs/latest/reference/_images $f/reference/
    fi
done

rm -rf src/main/content/docs/build

timer_end=$(date +%s)
echo "Total execution time for copying Antora docs to webapp: '$(date -u --date @$(( $timer_end - $timer_start )) +%H:%M:%S)'"

python3 $BUILD_SCRIPTS_DIR/parse_code_blocks.py
echo "Completed parsing the code blocks"

timer_start=$(date +%s)
python3 $BUILD_SCRIPTS_DIR/parse_features_toc.py
timer_end=$(date +%s)
echo "Total execution time for parsing the features toc: '$(date -u --date @$(( $timer_end - $timer_start )) +%H:%M:%S)'"

#only push translated files during prod build
if [ "$PROD_SITE" = true ]; then

    pushd docs-translation

    git checkout -f main
    rm -rf en/*
    cp -R ../target/jekyll-webapp/docs/latest/ en/
    rm -rf en/_images
    rm -rf en/*/_images
    if [ -z "$(git status -s)" ]; then
        echo "Translation repo is up to date"
    else
        echo "Updating translation repo"
        git add --all
        git commit -m "Updated $(date '+%Y-%m-%d %H:%M:%S')"
        git push
        echo "Finished updating translation repo"
    fi

    popd

fi

rm -rf docs-translation

echo "Parsing translated docs imgs"
python3 $BUILD_SCRIPTS_DIR/parse_translated_versions.py
echo "Completed parsing translated doc imgs"

echo "Minifying Docs HTML"
html-minifier --input-dir target/jekyll-webapp/docs --output-dir target/jekyll-webapp/docs --file-ext html --collapse-whitespace --remove-comments
echo "HTML minification complete"

echo "Finished building and prepping all Antora content"
